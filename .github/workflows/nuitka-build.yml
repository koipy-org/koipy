name: Build Python Project
on:
  push:
    branches:
      - "build"
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-20.04
            files: |
              o/main.dist/main.bin
            args: -q
            ename: main.bin
            uname: updater.bin
            esuffix: ""
            platform: "linux"
#          - os: macos-latest
#            files: |
#              o/main.dist/main.bin
#            ename: main.bin
#            uname: updater.bin
#            args: -q
#            esuffix: ""
#            platform: "darwin"
#          - os: windows-latest
#            files: |
#              o/main.dist/main.exe
#            args: -q
#            ename: main.exe
#            uname: updater.exe
#            esuffix: ".exe"
#            platform: "windows"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: koipy-org/koipy
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup Python 3.11
        uses: actions/setup-python@v2
        with:
          python-version: 3.11
      - name: Install dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libncursesw5-dev libssl-dev libsqlite3-dev tk-dev libgdbm-dev libbz2-dev zlib1g-dev libffi-dev liblzma-dev libexpat1-dev patchelf git
      - name: Install dependencies
        if: runner.os == 'macOS'
        run: |
          brew install patchelf git
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install Nuitka
        if: runner.os == 'Linux'
        run: |
          pip install Nuitka
          python -m nuitka --version
      - name: Compile project
        if: runner.os != 'Windows'
        run: |
          python -m nuitka --standalone --output-dir=o --include-data-dir=resources=resources --nofollow-import-to=requests,async_timeout,Pillow,pilmoji,yaml,tgcrypto,apscheduler,email,emoji,loguru,aiohttp_socks,websockets,tzlocal,cryptography,PIL,pkg_resources,pyrogram,geoip,aiohttp,encodings,google-re2,asyncio,addons main.py
      - name: Process some files
        if: runner.os != 'Windows'
        run: |
          cp -r ${{ env.pythonLocation }}/lib/python3.11/* o/main.dist/
          mv o/main.dist/lib-dynload/_sqlite3.*.so o/main.dist/
          mv o/main.dist/lib-dynload/pyexpat.*.so o/main.dist/
          pip install -r requirements.txt -t o/main.dist/
      - name: Remove some packages
        if: runner.os != 'Windows'
        run: |
          rm -r o/main.dist/turtle*
#          rm -r o/main.dist/importlib
          rm -r o/main.dist/encodings
          rm -r o/main.dist/pydoc_data
          rm -r o/main.dist/ensurepip
#          rm -r o/main.dist/ctypes/test
#          rm -r o/main.dist/distutils
          rm -r o/main.dist/tkinter
          rm -r o/main.dist/unittest
          rm -r o/main.dist/lib2to3
          rm -r o/main.dist/setuptools
          rm -r o/main.dist/idlelib
          rm -r o/main.dist/lib-dynload
          rm -r o/main.dist/site-packages
          rm -r o/main.dist/test
          rm -r o/main.dist/config-3.11*
          rm -r o/main.dist/__pycache__
      - name: Run UPX
        if: runner.os != 'macOS'
        uses: crazy-max/ghaction-upx@v3
        with:
          files: |
              ${{ matrix.files }}
#              o2/updater.dist/${{ matrix.uname }}
          args: ${{ matrix.args }}
      - name: rename
        run: |
          mv o/main.dist/${{ matrix.ename }} o/main.dist/koipy${{ matrix.esuffix }}
#          cp o2/updater.dist/${{ matrix.uname }} o/main.dist/
#          mv o/main.dist/${{ matrix.uname }} o/main.dist/updater${{ matrix.esuffix }}

      - name: Upload artifact
        if: runner.os != 'Windows'
        uses: actions/upload-artifact@v4
        with:
          name: koipy-${{ matrix.platform }}-amd64
          path: o/main.dist/
